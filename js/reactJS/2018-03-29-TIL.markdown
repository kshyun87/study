# component
컴포넌트는 구성품 또는 레고의 블럭같은 녀석이라고 생각하면됩니다.
예를 들자면 버튼, 텍스트박스 등을 들 수 있습니다.

레고의 블럭처럼 각 기능을 컴포넌트로 분리하고 끼워맞추는 방식을 사용하면 재사용성도 높아지고 유지보수에 편리합니다.

리엑트에서는 이를 이용해서 UI를 컴포넌트로 분리시키고 필요한 구성요소를 맞춰서 하나의 레고로 만들게 되었습니다.

##이벤트 다루기
react는 onclick이 아닌 onClick을 사용한다.
클릭 이벤트가 철자가 대문자인 것을 명심해야합니다.
onClick={함수명} 으로 지정하면 해당 함수가 클릭될 때 실행됩니다.

클래스의 메소드를 호출하기 위해서는
bind가 필요합니다.
```
cunstructor(props){
this.clickHandler = this.clickHandler.bind(this)
}
clickHandler(){
    xxxx
}
```
이렇게 해야합니다.

## 프로퍼티
부모 컴포넌트가 자식 컴포넌트로 값을 전달하기 위해서는 프로퍼티를 사용합니다.
onChange와 같은 함수도 전달할 수 있음.
자식 컴포넌트는 전달 받은 onChange를 props를 이용해서 호출할 수 있습니다. this.props.onChange()로 사용.

## componentWillReceiveProps()
프로퍼티가 변경되면 실행되는 녀석.

## state와 props
state(상태)는 컴포넌트의 상태를 나타내는 것.
props(프로퍼티)는 컴포넌트가 가지고 있는 다양한 값을 나타내는 것.
쉽게 말해 state는 변화할 수 있는 데이터의 집합.
state가 변경되면 컴포넌트를 다시 렌더링 합니다.
이 state는 변경할 수 있지만 this.state.xxx = xxx로 변경하는 것이 아닌 this.setState({xxx:xxx})로 변경한다.
상태가 변경되면 다음 메서드가 자동으로 호출된다.
* shouldComponentUpdate(nextProps, nestState)
* comonentWillupdate()
* render()
* componentDidUpdate()

### props(프로퍼티)
프로퍼티는 일반적으로 부모 컴포넌트에서 설정.
설정된 props는 컴포넌트 내부에서 변경하지 않는다.
defaultProps(초기값) 설정과 propTypes(자료 유효성검사)가 가능합니다.
간단히 말해 props는 읽을 수 있지만 변경은 못한다입니다.(컴포넌트 내에서)
부모 컴포넌트에서 값을 변경하면 자식 컴포넌트의 다음 메소드가 실행 됩니다.
* componentWillReceiveProps(nextProps)
이 메소드 안에서 state를 주로 변경하게 되는데 그럼 위에서 호출된 메소드들이 실행됩니다.

## 리엑트의 이벤트
html, JS의 일반적인 이벤트와는 다름.
onclick이 아닌 onClick 처럼 on다음이 대문자로 되어 있다.
